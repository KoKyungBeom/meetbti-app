name: Java CI with Gradle
on:
  push:
    branches: [ main, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'zulu'
    
    - name: Debug Gradle Wrapper
      working-directory: server
      run: |
        pwd
        ls -la
        ls -la gradle/wrapper
        file ./gradlew
        cat gradle/wrapper/gradle-wrapper.properties
    
    - name: Regenerate Gradle Wrapper
      working-directory: server
      run: |
        chmod +x gradlew
        ./gradlew wrapper --gradle-version 7.3.3
    
    - name: Build with Gradle
      working-directory: server
      run: ./gradlew build
    
    - name: Docker build
      run: |
        docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
        cd server
        docker build -t meetbti .
        docker tag meetbti hyejipark/meetbti:${GITHUB_SHA::7}
        docker push hyejipark/meetbti:${GITHUB_SHA::7}
    
    # AWS credentials configuration
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
    
    - name: Deploy to Server
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ap-northeast-2
      run: |
        aws ssm send-command \
          --instance-ids i-0eb0e2bbd5b50659e \
          --document-name "AWS-RunShellScript" \
          --parameters "commands=[
            'if sudo docker ps -a --format \'{{.Names}}\' | grep -q \'^server$\'; then',
            '  sudo docker stop server',
            '  sudo docker rm server',
            'fi',
            'sudo docker pull hyejipark/meetbti:${GITHUB_SHA::7}',
            'sudo docker tag hyejipark/meetbti:${GITHUB_SHA::7} meetbti',
            'sudo docker run -d --name server -p 8080:8080 \
            -e DATASOURCE_URL=${{ secrets.DATASOURCE_URL }} \
            -e DATASOURCE_USERNAME=${{ secrets.DATASOURCE_USERNAME }} \
            -e DATASOURCE_PASSWORD=${{ secrets.DATASOURCE_PASSWORD }} \
            -e G_CLIENT_ID=${{ secrets.G_CLIENT_ID }} \
            -e G_CLIENT_SECRET=${{ secrets.G_CLIENT_SECRET }} \
            -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            -e EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }} \
            -e EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} \
            -e ADMIN_MAIL=${{ secrets.ADMIN_MAIL }} \
            -e AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }} \
            meetbti'
          ]" \
          --output text