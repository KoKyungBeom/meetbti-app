import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import './MBTIBoard.css';
import sendGetPostsRequest from '../../requests/GetPostsRequest';
import { useAuth } from '../../auth/AuthContext';
import sendGetMyinfoRequest from '../../requests/GetMyInfo';


// Ìó§Îçî(Î°úÍ≥†, Îí§Î°úÍ∞ÄÍ∏∞) Ïª¥Ìè¨ÎÑåÌä∏
const Header = () => {
  const navigate = useNavigate();
  return (
    <header className="header">
      <div className="logo-box">
        <div className='logo-img' onClick={() => navigate('/')}>
          <img src="public-img/Main-logo.png" alt='Î©îÏù∏Î°úÍ≥†'/>
        </div>
        <div className="back-icon" onClick={() => navigate(-1)}>
          <img src="public-img/back(grey).png" alt='Îí§Î°ú Í∞ÄÍ∏∞' />
        </div>
      </div>
      <div className="logo-text">
        <h1>Î≥∏Í≤© MBTI Ïª§ÎÆ§ÎãàÌã∞!</h1>
      </div>
    </header>
  );
};

// ÌïÑÌÑ∞ Ïª¥Ìè¨ÎÑåÌä∏
const Filter = () => {
    const [isMBTIDropdownOpen, setMBTIDropdownOpen] = useState(false);
    const [isSortDropdownOpen, setSortDropdownOpen] = useState(false);

    const toggleMBTIDropdown = () => {
        setMBTIDropdownOpen(!isMBTIDropdownOpen);
    };

    const toggleSortDropdown = () => {
        setSortDropdownOpen(!isSortDropdownOpen);
    };

    return (
        <div className="filter">
            <div className="dropdown">
                <button className="filter-btn" onClick={toggleMBTIDropdown}>‚ñº INFJ</button>
                {isMBTIDropdownOpen && (
                    <div className="dropdown-menu">
                        <button className="dropdown-item">ALL</button>
                        <button className="dropdown-item">ENTJ</button>
                        <button className="dropdown-item">ENTP</button>
                        <button className="dropdown-item">ENFJ</button>
                        <button className="dropdown-item">ENFP</button>
                        <button className="dropdown-item">ESTJ</button>
                        <button className="dropdown-item">ESTP</button>
                        <button className="dropdown-item">ESFJ</button>
                        <button className="dropdown-item">ESFP</button>
                        <button className="dropdown-item">INTJ</button>
                        <button className="dropdown-item">INTP</button>
                        <button className="dropdown-item">INFJ</button>
                        <button className="dropdown-item">INFP</button>
                        <button className="dropdown-item">ISTJ</button>
                        <button className="dropdown-item">ISTP</button>
                        <button className="dropdown-item">ISFJ</button>
                        <button className="dropdown-item">ISFP</button>
                    </div>
                )}
            </div>
            <div className="dropdown">
                <button className="filter-btn" onClick={toggleSortDropdown}>‚ñº ÏµúÏã†Ïàú</button>
                {isSortDropdownOpen && (
                    <div className="dropdown-menu">
                        <button className="dropdown-item">ÏµúÏã†Ïàú</button>
                        <button className="dropdown-item">Ïù∏Í∏∞Ïàú</button>
                        <button className="dropdown-item">Ï°∞ÌöåÏàú</button>
                        <button className="dropdown-item">ÎåìÍ∏ÄÎßéÏùÄÏàú</button>
                    </div>
                )}
            </div>
        </div>
    );
};

// Ìè¨Ïä§Ìä∏ Ïª¥Ìè¨ÎÑåÌä∏
const dummyData = [
    { title: "Í≤ΩÎ≤îÏù¥Îäî ÏπòÏôÄÏôÄ", views: 24200, likes: 2234, comments: 3254 },
    { title: "ÏõêÏùºÏù¥Ïùò ÏùÄÎ∞ÄÌïú ÏÇ¨ÏÉùÌôú Ïç∞ ÌëºÎã§.", views: 97245, likes: 9999, comments: 9999 },
    { title: "Í¥ëÌù¨Îûë ÎØºÏ§ÄÏù¥Îûë Íµ¨Í∏Ä Í∞îÎÉê?", views: 92, likes: 1, comments: 23 },
    { title: "(Ïã§ÏãúÍ∞Ñ) Í≤ΩÎ≤îÏù¥ Ï†úÏ£ºÎèÑ ÎåÄÏ†ÄÌÉù ÏÇ¨ÏßÑ", views: 42875, likes: 4234, comments: 5254 },
    { title: "Îü≠ÌÇ§, Î∞îÎãêÎùº, ÎùºÎñºÎäî ÏÇ¨Ïã§...", views: 3855, likes: 271, comments: 2872 },
    { title: "ÌîÑÎ°úÏ†ùÌä∏ ÏõêÎûò Ïù¥Î†áÍ≤å ÌûòÎì†Í±∞ÎÉê „Ö†„Ö†", views: 74207, likes: 6754, comments: 7735 },
];

// Í≤åÏãúÌåê Ïª¥Ìè¨ÎÑåÌä∏
const Board = () => {
    const navigate = useNavigate();
    

    return (
        <div className="board">
            <div className="posts">
                {dummyData.map((post, index) => (
                    <div key={index} className="post-item">
                        <div className="post-title" onClick={() => navigate(`/postpage`)}>{post.title}</div>
                        <div className="post-info">
                            <span>Ï°∞Ìöå {post.views.toLocaleString()}</span>
                            <span>‚ù§Ô∏è {post.likes.toLocaleString()}</span>
                            <span>üí¨ {post.comments.toLocaleString()}</span>
                        </div>
                    </div>
                ))}
            </div>
        </div>
    );
};


// Í∏ÄÏì∞Í∏∞ Î≤ÑÌäº Ïª¥Ìè¨ÎÑåÌä∏
const WriteButton = (props) => {
    const navigate = useNavigate();
    return (
        <div className="write-section">
            <button className="write-btn" onClick={() => {
                if(props.category === 'NONE' || props.category === 'ALL'){
                    alert('Í∏ÄÏì∞Í∏∞ Í∂åÌïúÏù¥ ÏóÜÏñ¥Ïöî');
                    return;
                }
                navigate(`/registPost?category=${props.category}`);
                }}>Í∏ÄÏì∞Í∏∞</button>
        </div>
    );
};


// ÌéòÏù¥ÏßÄ ÎÑ§Ïù¥ÏÖò Ïª¥Ìè¨ÎÑåÌä∏
const PageNation = () => {
    return (
        <div className="pagination">
                <button className="previous-page">{"<"}</button>
                {[1, 2, 3, 4, 5].map((num) => (
                    <button key={num} className="page-number">{num}</button>
                ))}
                <button className="next-page">{">"}</button>
            </div>
    );
};


// Í≤åÏãúÌåê ÌéòÏù¥ÏßÄ Ïª¥Ìè¨ÎÑåÌä∏
const MBTIBoard = () => {
    const { state } = useAuth();
    const navigate = useNavigate();
    const [myData, setMyData] = useState({data:{mbti:'ALL'}});
    const [category, setCategory] = useState('ALL');
    const [loading, setLoading] = useState(true);
    const [posts, setPosts] = useState({data:[]});

    useEffect(() => {
        sendGetMyinfoRequest(state, setMyData);
        sendGetPostsRequest(state, 1, 6, myData.data.mbti, 'createdAt', setLoading, setPosts);
    }, []);
    
    return (
      <div className="app">
        <Header />
        <Filter />
        <Board />
        <WriteButton category={myData.data.mbti}/>
        <PageNation />
      </div>
    );
  };
  
  export default MBTIBoard;
